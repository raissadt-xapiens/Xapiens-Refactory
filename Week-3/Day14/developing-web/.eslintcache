[{"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/index.js":"1","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/App.js":"2","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/LandingPage.js":"3","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Header.js":"4","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Introduction.js":"5","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Footer.js":"6","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Contact.js":"7","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Campaign.js":"8","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/index.js":"9","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/App.js":"10","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/LandingPage.js":"11","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Header.js":"12","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Introduction.js":"13","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Campaign.js":"14","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Contact.js":"15","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Footer.js":"16","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/SignUp.js":"17","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/SignIn.js":"18","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/FormErrors.js":"19","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/index.js":"20","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/SignUp.js":"21","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/App.js":"22","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/LandingPage.js":"23","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Contact.js":"24","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Introduction.js":"25","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Campaign.js":"26","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Footer.js":"27","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Header.js":"28","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Form/Function.js":"29","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Form/Validation.js":"30","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/FormSignIn.js":"31","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/FormSignUp.js":"32","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/index.js":"33","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/App.js":"34","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Header.js":"35","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Footer.js":"36","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Home/Introduction.js":"37","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Home/Campaign.js":"38","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Home/Contact.js":"39","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/LandingPage.js":"40","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/NewsPage.js":"41","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Menu/AllNews.js":"42","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/ProjectsPage.js":"43","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/MenusPage.js":"44","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/FormSignIn.js":"45","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/FormSignUp.js":"46","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Form/Validation.js":"47","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Form/Function.js":"48"},{"size":349,"mtime":1612244051710,"results":"49","hashOfConfig":"50"},{"size":615,"mtime":1612182700869,"results":"51","hashOfConfig":"50"},{"size":526,"mtime":1612171306643,"results":"52","hashOfConfig":"50"},{"size":8401,"mtime":1612189630591,"results":"53","hashOfConfig":"50"},{"size":2570,"mtime":1612190407420,"results":"54","hashOfConfig":"50"},{"size":352,"mtime":1612023893173,"results":"55","hashOfConfig":"50"},{"size":3780,"mtime":1612190651881,"results":"56","hashOfConfig":"50"},{"size":2057,"mtime":1612190487159,"results":"57","hashOfConfig":"50"},{"size":357,"mtime":1612321203399,"results":"58","hashOfConfig":"59"},{"size":615,"mtime":1612182700869,"results":"60","hashOfConfig":"59"},{"size":526,"mtime":1612171306643,"results":"61","hashOfConfig":"59"},{"size":19426,"mtime":1612283653983,"results":"62","hashOfConfig":"59"},{"size":2570,"mtime":1612190407420,"results":"63","hashOfConfig":"59"},{"size":2057,"mtime":1612190487159,"results":"64","hashOfConfig":"59"},{"size":3780,"mtime":1612284899217,"results":"65","hashOfConfig":"59"},{"size":352,"mtime":1612023893173,"results":"66","hashOfConfig":"59"},{"size":4707,"mtime":1612322854495,"results":"67","hashOfConfig":"59"},{"size":8919,"mtime":1612281723219,"results":"68","hashOfConfig":"59"},{"size":393,"mtime":1612259855681,"results":"69","hashOfConfig":"59"},{"size":498,"mtime":1612406136205,"results":"70","hashOfConfig":"71"},{"size":4707,"mtime":1612322854495,"results":"72","hashOfConfig":"71"},{"size":615,"mtime":1612182700869,"results":"73","hashOfConfig":"71"},{"size":526,"mtime":1612171306643,"results":"74","hashOfConfig":"71"},{"size":3780,"mtime":1612284899217,"results":"75","hashOfConfig":"71"},{"size":2570,"mtime":1612190407420,"results":"76","hashOfConfig":"71"},{"size":2057,"mtime":1612190487159,"results":"77","hashOfConfig":"71"},{"size":352,"mtime":1612023893173,"results":"78","hashOfConfig":"71"},{"size":19600,"mtime":1612340278311,"results":"79","hashOfConfig":"71"},{"size":749,"mtime":1612339705835,"results":"80","hashOfConfig":"71"},{"size":1153,"mtime":1612342327574,"results":"81","hashOfConfig":"71"},{"size":1516,"mtime":1612343890663,"results":"82","hashOfConfig":"71"},{"size":2708,"mtime":1612344147624,"results":"83","hashOfConfig":"71"},{"size":487,"mtime":1612431027518,"results":"84","hashOfConfig":"85"},{"size":784,"mtime":1612431015326,"results":"86","hashOfConfig":"85"},{"size":20409,"mtime":1612431024634,"results":"87","hashOfConfig":"85"},{"size":352,"mtime":1612023893173,"results":"88","hashOfConfig":"85"},{"size":2577,"mtime":1612420118559,"results":"89","hashOfConfig":"85"},{"size":2060,"mtime":1612420125975,"results":"90","hashOfConfig":"85"},{"size":3795,"mtime":1612420109566,"results":"91","hashOfConfig":"85"},{"size":521,"mtime":1612421338123,"results":"92","hashOfConfig":"85"},{"size":345,"mtime":1612421924459,"results":"93","hashOfConfig":"85"},{"size":8696,"mtime":1612435014515,"results":"94","hashOfConfig":"85"},{"size":529,"mtime":1612428342198,"results":"95","hashOfConfig":"85"},{"size":496,"mtime":1612429386272,"results":"96","hashOfConfig":"85"},{"size":1516,"mtime":1612430990710,"results":"97","hashOfConfig":"85"},{"size":2708,"mtime":1612430981326,"results":"98","hashOfConfig":"85"},{"size":1153,"mtime":1612342327574,"results":"99","hashOfConfig":"85"},{"size":749,"mtime":1612339705835,"results":"100","hashOfConfig":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1axi7vp",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wzxlib",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"123"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"123"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dsq4sg",{"filePath":"146","messages":"147","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"151"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"1luvok0",{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/index.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/App.js",[],["209","210"],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/LandingPage.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Header.js",["211"],"import React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Col\n} from 'reactstrap';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport '../assets/styles/Header.css';\n\nconst Header = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [nestedModal, setNestedModal] = useState(false);\n    const [closeAll, setCloseAll] = useState(false);\n    const [value, setValue] = useState();\n\n    const toggle1 = () => setIsOpen(!isOpen);\n    const toggle2 = () => setModal(!modal);\n    const toggle3 = () => {\n        setNestedModal(!nestedModal);\n        setCloseAll(false);\n    }\n    const toggleAll = () => {\n        setNestedModal(!nestedModal);\n        setCloseAll(true);\n    }\n\n    return (\n        <div>\n            <Navbar\n                className=\"navigation\"\n                light \n                expand=\"lg\">\n                <NavbarBrand\n                    className=\"mr-auto\"\n                >\n                    <h2\n                        className=\"oipa\"\n                    >\n                        OIPA\n                    </h2>\n                </NavbarBrand>\n                <NavbarToggler\n                    onClick={toggle1}\n                />\n                <Collapse\n                    isOpen={isOpen} navbar>\n                    <Nav\n                        className=\"ml-auto\"\n                        navbar\n                    >\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                            >\n                                About Us\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                            >\n                                Projects\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                            >\n                                News\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                onClick={toggle2}\n                            >\n                                Account\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n            <div>\n                <Modal isOpen={modal} toggle={toggle2} className=\"pop-modal\">\n                    <ModalHeader toggle={toggle2} className=\"modal-title\">Sign In</ModalHeader>\n                    <ModalBody>\n                        <Form className=\"signup-signin\">\n                            <Col>\n                                <h5 className=\"modal-sub\">\n                                    Email:\n                                </h5>\n                                <FormGroup>\n                                    <Label for=\"email\" type=\"email\" />\n                                    <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n                                </FormGroup>\n                            </Col>\n                            <Col>\n                                <h5 className=\"modal-sub\">\n                                    Password:\n                                </h5>\n                                <FormGroup>\n                                    <Label for=\"password\" type=\"password\" />\n                                    <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n                                </FormGroup>\n                            </Col>\n                        </Form>\n                        <br/>\n                        <a onClick={toggle3} className=\"modal-link\">Don't have an account?</a>\n                            <Modal isOpen={nestedModal} toggle={toggle3} onCLosed={closeAll ? toggle2 : undefined} className=\"pop-modal\">\n                                <ModalHeader className=\"modal-title\">Sign Up</ModalHeader>\n                                <ModalBody>\n                                    <Form className=\"signup-signin\">\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Full Name:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"name\" type=\"text\" />\n                                            <Input type=\"text\" id=\"exampleName\" placeholder=\"Put your name\" />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Email:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"email\" type=\"email\" />\n                                            <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Password:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"password\" type=\"password\" />\n                                            <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Phone Number:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"phone\" type=\"number\" />\n                                            <PhoneInput value={value} onChange={setValue} placeholder=\"Put your phone number\" />\n                                            {/* <Input type=\"number\" pattern=\"[0-9]+\" id=\"examplePhoNum\" placeholder=\"Put your phone number\" />  */}\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Address:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"address\" type=\"text\" />\n                                            <Input type=\"text\" id=\"exampleAddress\" placeholder=\"Put your address\" />\n                                        </FormGroup>\n                                        </Col>\n                                    </Form>\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button onClick={toggleAll} type=\"submit\" className=\"modal-button\">Submit</Button>\n                                </ModalFooter>\n                            </Modal>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button type=\"submit\" className=\"modal-button\">Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Introduction.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Footer.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Contact.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day11/developing-web/src/components/Campaign.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/index.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/App.js",[],["212","213"],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/LandingPage.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Header.js",["214"],"import React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Col\n} from 'reactstrap';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport '../assets/styles/Header.css';\n\nconst Header = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [nestedModal, setNestedModal] = useState(false);\n    const [closeAll, setCloseAll] = useState(false);\n    const [value, setValue] = useState();\n\n    const toggle1 = () => setIsOpen(!isOpen);\n    const toggle2 = () => setModal(!modal);\n    const toggle3 = () => {\n        setNestedModal(!nestedModal);\n        setCloseAll(false);\n    }\n    const toggleAll = () => {\n        setNestedModal(!nestedModal);\n        setCloseAll(true);\n    }\n\n    return (\n        <div>\n            <Navbar\n                className=\"navigation\"\n                light \n                expand=\"lg\">\n                <NavbarBrand\n                    className=\"mr-auto\"\n                >\n                    <h2\n                        className=\"oipa\"\n                    >\n                        OIPA\n                    </h2>\n                </NavbarBrand>\n                <NavbarToggler\n                    onClick={toggle1}\n                />\n                <Collapse\n                    isOpen={isOpen} navbar>\n                    <Nav\n                        className=\"ml-auto\"\n                        navbar\n                    >\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                            >\n                                About Us\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                            >\n                                Projects\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                            >\n                                News\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                onClick={toggle2}\n                            >\n                                Account\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n            <div>\n                <Modal isOpen={modal} toggle={toggle2} className=\"pop-modal\">\n                    <ModalHeader toggle={toggle2} className=\"modal-title\">Sign In</ModalHeader>\n                    <ModalBody>\n                        <Form className=\"signup-signin\">\n                            <Col>\n                                <h5 className=\"modal-sub\">\n                                    Email:\n                                </h5>\n                                <FormGroup>\n                                    <Label for=\"email\" type=\"email\" />\n                                    <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n                                </FormGroup>\n                            </Col>\n                            <Col>\n                                <h5 className=\"modal-sub\">\n                                    Password:\n                                </h5>\n                                <FormGroup>\n                                    <Label for=\"password\" type=\"password\" />\n                                    <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n                                </FormGroup>\n                            </Col>\n                        </Form>\n                        <br/>\n                        <a onClick={toggle3} className=\"modal-link\">Don't have an account?</a>\n                            <Modal isOpen={nestedModal} toggle={toggle3} onCLosed={closeAll ? toggle2 : undefined} className=\"pop-modal\">\n                                <ModalHeader className=\"modal-title\">Sign Up</ModalHeader>\n                                <ModalBody>\n                                    <Form className=\"signup-signin\">\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Full Name:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"name\" type=\"text\" />\n                                            <Input type=\"text\" id=\"exampleName\" placeholder=\"Put your name\" />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Email:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"email\" type=\"email\" />\n                                            <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Password:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"password\" type=\"password\" />\n                                            <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Phone Number:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"phone\" type=\"number\" />\n                                            <PhoneInput value={value} onChange={setValue} placeholder=\"Put your phone number\" />\n                                            {/* <Input type=\"number\" pattern=\"[0-9]+\" id=\"examplePhoNum\" placeholder=\"Put your phone number\" />  */}\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Address:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"address\" type=\"text\" />\n                                            <Input type=\"text\" id=\"exampleAddress\" placeholder=\"Put your address\" />\n                                        </FormGroup>\n                                        </Col>\n                                    </Form>\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button onClick={toggleAll} type=\"submit\" className=\"modal-button\">Submit</Button>\n                                </ModalFooter>\n                            </Modal>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button type=\"submit\" className=\"modal-button\">Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n\n\n\n// import React, { useState } from 'react';\n// import {\n//     Collapse,\n//     Navbar,\n//     NavbarToggler,\n//     NavbarBrand,\n//     Nav,\n//     NavItem,\n//     NavLink,\n//     Button,\n//     Modal,\n//     ModalHeader,\n//     ModalBody,\n//     ModalFooter,\n//     Form,\n//     FormGroup,\n//     Label,\n//     Input,\n//     Col\n// } from 'reactstrap';\n// import PhoneInput from 'react-phone-number-input';\n// import 'react-phone-number-input/style.css';\n// import '../assets/styles/Header.css';\n\n\n// const validEmailRegex = RegExp(\n//     /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n// );\n// const validateForm = errors => {\n//     let valid = true;\n//     Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n//     return valid;\n// };\n\n\n// class Header extends React.Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {\n//             email: '',\n//             password: '',\n//             errors: {\n//               email: '',\n//               password: '',\n//             },\n//             emailValid: false,\n//             passwordValid: false,\n//             formValid: false      \n//           };\n//         }\n\n//         handleChange = (event) => {\n//             event.preventDefault();\n//             const { name, value } = event.target;\n//             let errors = this.state.errors;\n        \n//             switch (name) {\n//               case 'email': \n//                 errors.email = \n//                   validEmailRegex.test(value)\n//                     ? ''\n//                     : 'Email is not valid!';\n//                 break;\n//               case 'password': \n//                 errors.password = \n//                   value.length < 8\n//                     ? 'Password must be at least 8 characters long!'\n//                     : '';\n//                 break;\n//               default:\n//                 break;\n//             }\n        \n//             this.setState({errors, [name]: value});\n//           }\n\n//           handleSubmit = (event) => {\n//             event.preventDefault();\n//             if (this.state.email === '' && this.state.password === '') {\n//               alert('Please fill the blank!');\n//             } else if (validateForm(this.state.errors)) {\n//               alert('Sign In success!');\n//             } else {\n//               alert('Sign In error!');\n//             }\n//           }\n\n//         }\n    \n//     const [isOpen, setIsOpen] = useState(false);\n//     const [modal, setModal] = useState(false);\n//     const [nestedModal, setNestedModal] = useState(false);\n//     const [closeAll, setCloseAll] = useState(false);\n//     const [value, setValue] = useState();\n\n//     const toggle1 = () => setIsOpen(!isOpen);\n//     const toggle2 = () => setModal(!modal);\n//     const toggle3 = () => {\n//         setNestedModal(!nestedModal);\n//         setCloseAll(false);\n//     }\n//     const toggleAll = () => {\n//         setNestedModal(!nestedModal);\n//         setCloseAll(true);\n//     }\n\n    \n//     render() {\n//         const {errors} = this.state;\n//         return (\n//         <div>\n//             <Navbar\n//                 className=\"navigation\"\n//                 light \n//                 expand=\"lg\">\n//                 <NavbarBrand\n//                     className=\"mr-auto\"\n//                 >\n//                     <h2\n//                         className=\"oipa\"\n//                     >\n//                         OIPA\n//                     </h2>\n//                 </NavbarBrand>\n//                 <NavbarToggler\n//                     onClick={toggle1}\n//                 />\n//                 <Collapse\n//                     isOpen={isOpen} navbar>\n//                     <Nav\n//                         className=\"ml-auto\"\n//                         navbar\n//                     >\n//                         <NavItem>\n//                             <NavLink\n//                                 className=\"main-link\"\n//                                 href=\"#\"\n//                             >\n//                                 About Us\n//                             </NavLink>\n//                         </NavItem>\n//                         <NavItem>\n//                             <NavLink\n//                                 className=\"main-link\"\n//                                 href=\"#\"\n//                             >\n//                                 Projects\n//                             </NavLink>\n//                         </NavItem>\n//                         <NavItem>\n//                             <NavLink\n//                                 className=\"main-link\"\n//                                 href=\"#\"\n//                             >\n//                                 News\n//                             </NavLink>\n//                         </NavItem>\n//                         <NavItem>\n//                             <NavLink\n//                                 className=\"main-link\"\n//                                 onClick={toggle2}\n//                             >\n//                                 Account\n//                             </NavLink>\n//                         </NavItem>\n//                     </Nav>\n//                 </Collapse>\n//             </Navbar>\n//             <div>\n//                 <Modal isOpen={modal} toggle={toggle2} className=\"pop-modal\">\n//                     <ModalHeader toggle={toggle2} className=\"modal-title\">Sign In</ModalHeader>\n//                     <ModalBody>\n//                         <Form className=\"signup-signin\">\n//                             <Col>\n//                                 <h5 className=\"modal-sub\">\n//                                     Email:\n//                                 </h5>\n//                                 <FormGroup>\n//                                     <Label for=\"email\" type=\"email\" />\n//                                     <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n//                                 </FormGroup>\n//                             </Col>\n//                             <Col>\n//                                 <h5 className=\"modal-sub\">\n//                                     Password:\n//                                 </h5>\n//                                 <FormGroup>\n//                                     <Label for=\"password\" type=\"password\" />\n//                                     <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n//                                 </FormGroup>\n//                             </Col>\n//                         </Form>\n//                         <br/>\n//                         <a onClick={toggle3} className=\"modal-link\">Don't have an account?</a>\n//                             <Modal isOpen={nestedModal} toggle={toggle3} onCLosed={closeAll ? toggle2 : undefined} className=\"pop-modal\">\n//                                 <ModalHeader className=\"modal-title\">Sign Up</ModalHeader>\n//                                 <ModalBody>\n//                                     <Form className=\"signup-signin\">\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Full Name:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"name\" type=\"text\" />\n//                                             <Input type=\"text\" id=\"exampleName\" placeholder=\"Put your name\" />\n//                                         </FormGroup>\n//                                         </Col>\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Email:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"email\" type=\"email\" />\n//                                             <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n//                                         </FormGroup>\n//                                         </Col>\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Password:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"password\" type=\"password\" />\n//                                             <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n//                                         </FormGroup>\n//                                         </Col>\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Phone Number:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"phone\" type=\"number\" />\n//                                             <PhoneInput value={value} onChange={setValue} placeholder=\"Put your phone number\" />\n//                                             {/* <Input type=\"number\" pattern=\"[0-9]+\" id=\"examplePhoNum\" placeholder=\"Put your phone number\" />  */}\n//                                         </FormGroup>\n//                                         </Col>\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Address:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"address\" type=\"text\" />\n//                                             <Input type=\"text\" id=\"exampleAddress\" placeholder=\"Put your address\" />\n//                                         </FormGroup>\n//                                         </Col>\n//                                     </Form>\n//                                 </ModalBody>\n//                                 <ModalFooter>\n//                                     <Button onClick={toggleAll} type=\"submit\" className=\"modal-button\">Submit</Button>\n//                                 </ModalFooter>\n//                             </Modal>\n//                     </ModalBody>\n//                     <ModalFooter>\n//                         <Button type=\"submit\" className=\"modal-button\">Submit</Button>\n//                     </ModalFooter>\n//                 </Modal>\n//             </div>\n//         </div>\n//     )\n// }\n// }\n\n// export default Header;","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Introduction.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Campaign.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Contact.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/components/Footer.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/SignUp.js",["215","216","217","218","219","220","221","222","223","224","225","226"],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/SignIn.js",["227","228","229","230","231","232","233","234","235","236","237","238"],"import React from 'react';\nimport '../src/assets/styles/Sign.css';\n\n\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {\n        email: '',\n        password: '',\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false      \n    };\n  }\n\n\n  handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password': \n        errors.password = \n          value.length < 8\n            ? 'Password must be at least 8 characters long!'\n            : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value});\n  }\n\n\n  // handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if (this.state.email === null || this.state.email === \"\") {\n  //     alert('Please fill the email');\n  //   } else if (this.state.password === null || this.state.password === \"\") {\n  //     alert('Please fill password');\n  //   } else if (validateForm(this.state.errors)) {\n  //     alert('Sign In success!');\n  //   } else {\n  //       alert('Sign In error!');\n  //   }\n  // }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.email === '' && this.state.password === '') {\n      alert('Please fill the blank!');\n    } else if (validateForm(this.state.errors)) {\n      alert('Sign In success!');\n    } else {\n      alert('Sign In error!');\n    }\n  }\n\n\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <div className='wrapper'>\n        <div className='form-wrapper'>\n          <h2>Sign In</h2>\n          <form onSubmit={this.handleSubmit} required>\n            <div className='email'>\n              <label htmlFor=\"email\">Email</label>\n              <input type='email' name='email' onChange={this.handleChange} required />\n              {errors.email.length > 0 && \n                <span className='error'>{errors.email}</span>}\n            </div>\n            <div className='password'>\n              <label htmlFor=\"password\">Password</label>\n              <input type='password' name='password' onChange={this.handleChange} required />\n              {errors.password.length > 0 && \n                <span className='error'>{errors.password}</span>}\n            </div>\n            <div className='submit'>\n              <button onClick={this.handleSubmit} type='submit'>Submit</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n\n\n\n\n\n// import React, { Component } from 'react';\n// import { FormErrors } from './FormErrors';\n// import '../src/assets/styles/Sign.css';\n\n\n// class SignIn extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       email: null,\n//       password: null,\n//       formErrors: {\n//         email: '',\n//         password: ''\n//       },\n//       emailValid: false,\n//       passwordValid: false,\n//       formValid: false      \n//     };\n//   }\n\n\n//   handleChange = (event) => {\n//     event.preventDefault();\n//     const name = event.target.name;\n//     const value = event.target.value;\n//     this.setState({[name]: value},\n//       () => { this.validateField(name, value) });\n//   }\n\n//   validateField(fieldName, value) {\n//     let fieldValidationErrors = this.state.formErrors;\n//     let emailValid = this.state.emailValid;\n//     let passwordValid = this.state.passwordValid;\n\n  \n//     switch (fieldName) {\n//       case 'email': \n//         emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n//         fieldValidationErrors.email = emailValid \n//         ? '' : ' is invalid!';\n//         break;\n//       case 'password': \n//         passwordValid = value.length < 8;\n//         fieldValidationErrors.password = passwordValid \n//         ? 'Password must be at least 8 characters long!'\n//         : '';\n//         break;\n//       default:\n//         break;\n//     }\n//     this.setState({ formErrors: fieldValidationErrors,\n//                     emailValid: emailValid,\n//                     passwordValid: passwordValid}, this.validateForm);\n//   }\n\n//   validateForm() {\n//     this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n//   }\n//   errorClass(error) {\n//     return(error.length === 0 ? '' : 'has-error');\n//   }\n\n\n//   render() {\n//     return (\n//       <div className='wrapper'>\n//         <div className='form-wrapper'>\n//           <h2>Sign In</h2>\n//           <div className='panel panel-default'>\n//             <FormErrors formErrors={this.state.formErrors} />\n//           </div>\n//           <form>\n//             <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`}>\n//               <label htmlFor=\"email\">Email</label>\n//               <input type='email' name='email' placeholder='Put your email' onChange={this.handleChange} value={this.state.email} required />\n//             </div>\n//             <div className={`form-group ${this.errorClass(this.state.formErrors.password)}`}>\n//               <label htmlFor=\"password\">Password</label>\n//               <input type='password' name='password' placeholder='Put your password' onChange={this.handleChange} value={this.state.password} required />\n//             </div>\n//             <div className='submit'>\n//               <button disabled={!this.state.formValid} type='submit'>Submit</button>\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default SignIn;\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import { FormErrors } from './FormErrors';\n// import '../src/assets/styles/Sign.css';\n\n// class SignIn extends Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = {\n//       email: '',\n//       password: '',\n//       formErrors: {email: '', password: ''},\n//       emailValid: false,\n//       passwordValid: false,\n//       formValid: false\n//     }\n//   }\n\n//   handleUserInput = (e) => {\n//     const name = e.target.name;\n//     const value = e.target.value;\n//     this.setState({[name]: value},\n//                   () => { this.validateField(name, value) });\n//   }\n\n//   validateField(fieldName, value) {\n//     let fieldValidationErrors = this.state.formErrors;\n//     let emailValid = this.state.emailValid;\n//     let passwordValid = this.state.passwordValid;\n\n//     switch(fieldName) {\n//       case 'email':\n//         emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n//         fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n//         break;\n//       case 'password':\n//         passwordValid = value.length >= 6;\n//         fieldValidationErrors.password = passwordValid ? '': ' is too short';\n//         break;\n//       default:\n//         break;\n//     }\n//     this.setState({formErrors: fieldValidationErrors,\n//                     emailValid: emailValid,\n//                     passwordValid: passwordValid\n//                   }, this.validateForm);\n//   }\n\n//   validateForm() {\n//     this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n//   }\n\n//   errorClass(error) {\n//     return(error.length === 0 ? '' : 'has-error');\n//   }\n\n//   render () {\n//     return (\n//       <form className=\"demoForm\">\n//         <h2>Sign up</h2>\n//         <div className=\"panel panel-default\">\n//           <FormErrors formErrors={this.state.formErrors} />\n//         </div>\n//         <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`}>\n//           <label htmlFor=\"email\">Email address</label>\n//           <input type=\"email\" required className=\"form-control\" name=\"email\"\n//             placeholder=\"Email\"\n//             value={this.state.email}\n//             onChange={this.handleUserInput}  />\n//         </div>\n//         <div className={`form-group ${this.errorClass(this.state.formErrors.password)}`}>\n//           <label htmlFor=\"password\">Password</label>\n//           <input type=\"password\" className=\"form-control\" name=\"password\"\n//             placeholder=\"Password\"\n//             value={this.state.password}\n//             onChange={this.handleUserInput}  />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\" disabled={!this.state.formValid}>Sign up</button>\n//       </form>\n//     )\n//   }\n// }\n\n// export default SignIn;","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day12/developing-web/src/FormErrors.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/index.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/SignUp.js",["239","240","241","242","243","244","245","246","247","248","249","250"],"import React from 'react';\nimport '../src/assets/styles/Sign.css';\n\n\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullName: '',\n      email: '',\n      password: '',\n      phoneNumber: '',\n      address: '',\n      errors: {\n        fullName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n        address: '',\n      },\n      fullNameValid: false,\n      emailValid: false,\n      passwordValid: false,\n      phoneNumberValid: false,\n      addressValid: false,\n      formValid: false\n    };\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n\n    switch (name) {\n      case 'fullName': \n        errors.fullName = \n          value.length < 5\n            ? 'Full Name must be at least 5 characters long!'\n            : '';\n        break;\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password': \n        errors.password = \n          value.length < 8\n            ? 'Password must be at least 8 characters long!'\n            : '';\n        break;\n      case 'phoneNumber':\n        errors.phoneNumber =\n          value.length < 10\n            ? 'Phone number must be at least 10 characters long!'\n            : '';\n        break;\n      case 'address':\n        errors.address =\n          value.length < 5\n            ? 'Address must be at least 5 characters long!'\n            : '';\n        break;  \n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value});\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.fullName === '' && this.state.email === '' && this.state.password === '' && this.state.phoneNumber === '' && this.state.address === '') {\n      alert('Please fill the blank!');\n    } else if (validateForm(this.state.errors)) {\n      alert('Sign Up success!');\n    } else {\n      alert('Sign Up error!');\n    }\n  }\n\n  // handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if (validateForm(this.state.errors)) {\n  //     alert('Valid Form!');\n  //   } else if (event == null && event == \"\") {\n  //     alert('Please fill all field!'); \n  //   } else {\n  //     alert('Invalid Form!');\n  //   }\n  // }\n\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <div className='wrapper'>\n        <div className='form-wrapper'>\n          <h2>Sign Up</h2>\n          <form onSubmit={this.handleSubmit} required>\n            <div className='fullName'>\n              <label htmlFor=\"fullName\">Full Name</label>\n              <input type='text' name='fullName' onChange={this.handleChange} required />\n              {errors.fullName.length > 0 && \n                <span className='error'>{errors.fullName}</span>}\n            </div>\n            <div className='email'>\n              <label htmlFor=\"email\">Email</label>\n              <input type='email' name='email' onChange={this.handleChange} required />\n              {errors.email.length > 0 && \n                <span className='error'>{errors.email}</span>}\n            </div>\n            <div className='password'>\n              <label htmlFor='password'>Password</label>\n              <input type='password' name='password' onChange={this.handleChange} required />\n              {errors.password.length > 0 && \n                <span className='error'>{errors.password}</span>}\n            </div>\n            <div className='phoneNumber'>\n                <label htmlFor='phoneNumber'>Phone Number</label>\n                <input type='number' min='0' name='phoneNumber' onChange={this.handleChange} required />\n                {errors.phoneNumber.length > 0 &&\n                <span className='error'>{errors.phoneNumber}</span>}\n            </div>\n            <div className='address'>\n                <label htmlFor='address'>Address</label>\n                <input type='text' name='address' onChange={this.handleChange} required />\n                {errors.address.length > 0 && \n                <span className='error'>{errors.address}</span>}\n            </div>\n            <div className='submit'>\n              <button onClick={this.handleSubmit} type='submit'>Create</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Signup;","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/App.js",[],["251","252"],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/LandingPage.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Contact.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Introduction.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Campaign.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Footer.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Header.js",["253"],"import React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Col\n} from 'reactstrap';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport '../assets/styles/Header.css';\n\nconst Header = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [nestedModal, setNestedModal] = useState(false);\n    const [closeAll, setCloseAll] = useState(false);\n    const [value, setValue] = useState();\n\n    const toggle1 = () => setIsOpen(!isOpen);\n    const toggle2 = () => setModal(!modal);\n    const toggle3 = () => {\n        setNestedModal(!nestedModal);\n        setCloseAll(false);\n    }\n    const toggleAll = () => {\n        setNestedModal(!nestedModal);\n        setCloseAll(true);\n    }\n\n    return (\n        <div>\n            <Navbar\n                className=\"navigation\"\n                light \n                expand=\"lg\">\n                <NavbarBrand\n                    className=\"mr-auto\"\n                >\n                    <h2\n                        className=\"oipa\"\n                    >\n                        OIPA\n                    </h2>\n                </NavbarBrand>\n                <NavbarToggler\n                    onClick={toggle1}\n                />\n                <Collapse\n                    isOpen={isOpen} navbar>\n                    <Nav\n                        className=\"ml-auto\"\n                        navbar\n                    >\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                                rel=\"noreferrer noopener\"\n                            >\n                                About Us\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                                rel=\"noreferrer noopener\"\n                            >\n                                Projects\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                href=\"#\"\n                                rel=\"noreferrer noopener\"\n                            >\n                                News\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className=\"main-link\"\n                                onClick={toggle2}\n                            >\n                                Account\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n            <div>\n                <Modal isOpen={modal} toggle={toggle2} className=\"pop-modal\">\n                    <ModalHeader toggle={toggle2} className=\"modal-title\">Sign In</ModalHeader>\n                    <ModalBody>\n                        <Form className=\"signup-signin\">\n                            <Col>\n                                <h5 className=\"modal-sub\">\n                                    Email:\n                                </h5>\n                                <FormGroup>\n                                    <Label for=\"email\" type=\"email\" />\n                                    <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n                                </FormGroup>\n                            </Col>\n                            <Col>\n                                <h5 className=\"modal-sub\">\n                                    Password:\n                                </h5>\n                                <FormGroup>\n                                    <Label for=\"password\" type=\"password\" />\n                                    <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n                                </FormGroup>\n                            </Col>\n                        </Form>\n                        <br/>\n                        <a onClick={toggle3} className=\"modal-link\">Don't have an account?</a>\n                            <Modal isOpen={nestedModal} toggle={toggle3} onCLosed={closeAll ? toggle2 : undefined} className=\"pop-modal\">\n                                <ModalHeader className=\"modal-title\">Sign Up</ModalHeader>\n                                <ModalBody>\n                                    <Form className=\"signup-signin\">\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Full Name:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"name\" type=\"text\" />\n                                            <Input type=\"text\" id=\"exampleName\" placeholder=\"Put your name\" />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Email:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"email\" type=\"email\" />\n                                            <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Password:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"password\" type=\"password\" />\n                                            <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Phone Number:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"phone\" type=\"number\" />\n                                            <PhoneInput value={value} onChange={setValue} placeholder=\"Put your phone number\" />\n                                            {/* <Input type=\"number\" pattern=\"[0-9]+\" id=\"examplePhoNum\" placeholder=\"Put your phone number\" />  */}\n                                        </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <h5 className=\"modal-sub\">\n                                                Address:\n                                            </h5>\n                                        <FormGroup>\n                                            <Label for=\"address\" type=\"text\" />\n                                            <Input type=\"text\" id=\"exampleAddress\" placeholder=\"Put your address\" />\n                                        </FormGroup>\n                                        </Col>\n                                    </Form>\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button onClick={toggleAll} type=\"submit\" className=\"modal-button\">Submit</Button>\n                                </ModalFooter>\n                            </Modal>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button type=\"submit\" className=\"modal-button\">Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n\n\n\n// import React, { useState } from 'react';\n// import {\n//     Collapse,\n//     Navbar,\n//     NavbarToggler,\n//     NavbarBrand,\n//     Nav,\n//     NavItem,\n//     NavLink,\n//     Button,\n//     Modal,\n//     ModalHeader,\n//     ModalBody,\n//     ModalFooter,\n//     Form,\n//     FormGroup,\n//     Label,\n//     Input,\n//     Col\n// } from 'reactstrap';\n// import PhoneInput from 'react-phone-number-input';\n// import 'react-phone-number-input/style.css';\n// import '../assets/styles/Header.css';\n\n\n// const validEmailRegex = RegExp(\n//     /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n// );\n// const validateForm = errors => {\n//     let valid = true;\n//     Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n//     return valid;\n// };\n\n\n// class Header extends React.Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {\n//             email: '',\n//             password: '',\n//             errors: {\n//               email: '',\n//               password: '',\n//             },\n//             emailValid: false,\n//             passwordValid: false,\n//             formValid: false      \n//           };\n//         }\n\n//         handleChange = (event) => {\n//             event.preventDefault();\n//             const { name, value } = event.target;\n//             let errors = this.state.errors;\n        \n//             switch (name) {\n//               case 'email': \n//                 errors.email = \n//                   validEmailRegex.test(value)\n//                     ? ''\n//                     : 'Email is not valid!';\n//                 break;\n//               case 'password': \n//                 errors.password = \n//                   value.length < 8\n//                     ? 'Password must be at least 8 characters long!'\n//                     : '';\n//                 break;\n//               default:\n//                 break;\n//             }\n        \n//             this.setState({errors, [name]: value});\n//           }\n\n//           handleSubmit = (event) => {\n//             event.preventDefault();\n//             if (this.state.email === '' && this.state.password === '') {\n//               alert('Please fill the blank!');\n//             } else if (validateForm(this.state.errors)) {\n//               alert('Sign In success!');\n//             } else {\n//               alert('Sign In error!');\n//             }\n//           }\n\n//         }\n    \n//     const [isOpen, setIsOpen] = useState(false);\n//     const [modal, setModal] = useState(false);\n//     const [nestedModal, setNestedModal] = useState(false);\n//     const [closeAll, setCloseAll] = useState(false);\n//     const [value, setValue] = useState();\n\n//     const toggle1 = () => setIsOpen(!isOpen);\n//     const toggle2 = () => setModal(!modal);\n//     const toggle3 = () => {\n//         setNestedModal(!nestedModal);\n//         setCloseAll(false);\n//     }\n//     const toggleAll = () => {\n//         setNestedModal(!nestedModal);\n//         setCloseAll(true);\n//     }\n\n    \n//     render() {\n//         const {errors} = this.state;\n//         return (\n//         <div>\n//             <Navbar\n//                 className=\"navigation\"\n//                 light \n//                 expand=\"lg\">\n//                 <NavbarBrand\n//                     className=\"mr-auto\"\n//                 >\n//                     <h2\n//                         className=\"oipa\"\n//                     >\n//                         OIPA\n//                     </h2>\n//                 </NavbarBrand>\n//                 <NavbarToggler\n//                     onClick={toggle1}\n//                 />\n//                 <Collapse\n//                     isOpen={isOpen} navbar>\n//                     <Nav\n//                         className=\"ml-auto\"\n//                         navbar\n//                     >\n//                         <NavItem>\n//                             <NavLink\n//                                 className=\"main-link\"\n//                                 href=\"#\"\n//                             >\n//                                 About Us\n//                             </NavLink>\n//                         </NavItem>\n//                         <NavItem>\n//                             <NavLink\n//                                 className=\"main-link\"\n//                                 href=\"#\"\n//                             >\n//                                 Projects\n//                             </NavLink>\n//                         </NavItem>\n//                         <NavItem>\n//                             <NavLink\n//                                 className=\"main-link\"\n//                                 href=\"#\"\n//                             >\n//                                 News\n//                             </NavLink>\n//                         </NavItem>\n//                         <NavItem>\n//                             <NavLink\n//                                 className=\"main-link\"\n//                                 onClick={toggle2}\n//                             >\n//                                 Account\n//                             </NavLink>\n//                         </NavItem>\n//                     </Nav>\n//                 </Collapse>\n//             </Navbar>\n//             <div>\n//                 <Modal isOpen={modal} toggle={toggle2} className=\"pop-modal\">\n//                     <ModalHeader toggle={toggle2} className=\"modal-title\">Sign In</ModalHeader>\n//                     <ModalBody>\n//                         <Form className=\"signup-signin\">\n//                             <Col>\n//                                 <h5 className=\"modal-sub\">\n//                                     Email:\n//                                 </h5>\n//                                 <FormGroup>\n//                                     <Label for=\"email\" type=\"email\" />\n//                                     <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n//                                 </FormGroup>\n//                             </Col>\n//                             <Col>\n//                                 <h5 className=\"modal-sub\">\n//                                     Password:\n//                                 </h5>\n//                                 <FormGroup>\n//                                     <Label for=\"password\" type=\"password\" />\n//                                     <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n//                                 </FormGroup>\n//                             </Col>\n//                         </Form>\n//                         <br/>\n//                         <a onClick={toggle3} className=\"modal-link\">Don't have an account?</a>\n//                             <Modal isOpen={nestedModal} toggle={toggle3} onCLosed={closeAll ? toggle2 : undefined} className=\"pop-modal\">\n//                                 <ModalHeader className=\"modal-title\">Sign Up</ModalHeader>\n//                                 <ModalBody>\n//                                     <Form className=\"signup-signin\">\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Full Name:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"name\" type=\"text\" />\n//                                             <Input type=\"text\" id=\"exampleName\" placeholder=\"Put your name\" />\n//                                         </FormGroup>\n//                                         </Col>\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Email:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"email\" type=\"email\" />\n//                                             <Input type=\"email\" id=\"exampleEmail\" placeholder=\"Put your email\" />\n//                                         </FormGroup>\n//                                         </Col>\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Password:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"password\" type=\"password\" />\n//                                             <Input type=\"password\" id=\"examplePassword\" placeholder=\"Put your password\" /> \n//                                         </FormGroup>\n//                                         </Col>\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Phone Number:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"phone\" type=\"number\" />\n//                                             <PhoneInput value={value} onChange={setValue} placeholder=\"Put your phone number\" />\n//                                             {/* <Input type=\"number\" pattern=\"[0-9]+\" id=\"examplePhoNum\" placeholder=\"Put your phone number\" />  */}\n//                                         </FormGroup>\n//                                         </Col>\n//                                         <Col>\n//                                             <h5 className=\"modal-sub\">\n//                                                 Address:\n//                                             </h5>\n//                                         <FormGroup>\n//                                             <Label for=\"address\" type=\"text\" />\n//                                             <Input type=\"text\" id=\"exampleAddress\" placeholder=\"Put your address\" />\n//                                         </FormGroup>\n//                                         </Col>\n//                                     </Form>\n//                                 </ModalBody>\n//                                 <ModalFooter>\n//                                     <Button onClick={toggleAll} type=\"submit\" className=\"modal-button\">Submit</Button>\n//                                 </ModalFooter>\n//                             </Modal>\n//                     </ModalBody>\n//                     <ModalFooter>\n//                         <Button type=\"submit\" className=\"modal-button\">Submit</Button>\n//                     </ModalFooter>\n//                 </Modal>\n//             </div>\n//         </div>\n//     )\n// }\n// }\n\n// export default Header;","/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Form/Function.js",["254"],"import { useState, useEffect } from 'react';\n\n\nconst useForm = (callback, validate) => {\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n  }\n};\n\n\nexport default useForm;",["255","256"],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/components/Form/Validation.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/FormSignIn.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day13/developing-web/src/FormSignUp.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/index.js",[],["257","258"],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/App.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Header.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Footer.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Home/Introduction.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Home/Campaign.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Home/Contact.js",[],["259","260"],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/LandingPage.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/NewsPage.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Menu/AllNews.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/ProjectsPage.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/MenusPage.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/FormSignIn.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/FormSignUp.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Form/Validation.js",[],"/home/rdesyandita/Documents/Daily Task/Xapiens-Refactory/Week-3/Day14/developing-web/src/components/Form/Function.js",["261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":127,"column":25,"nodeType":"268","endLine":127,"endColumn":69},{"ruleId":"262","replacedBy":"269"},{"ruleId":"264","replacedBy":"270"},{"ruleId":"266","severity":1,"message":"267","line":127,"column":25,"nodeType":"268","endLine":127,"endColumn":69},{"ruleId":"271","severity":1,"message":"272","line":6,"column":13,"nodeType":"273","messageId":"274","endLine":6,"endColumn":14,"suggestions":"275"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":17,"nodeType":"273","messageId":"274","endLine":6,"endColumn":18,"suggestions":"277"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":25,"nodeType":"273","messageId":"274","endLine":6,"endColumn":26,"suggestions":"279"},{"ruleId":"271","severity":1,"message":"272","line":6,"column":38,"nodeType":"273","messageId":"274","endLine":6,"endColumn":39,"suggestions":"280"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":42,"nodeType":"273","messageId":"274","endLine":6,"endColumn":43,"suggestions":"281"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":50,"nodeType":"273","messageId":"274","endLine":6,"endColumn":51,"suggestions":"282"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":59,"nodeType":"273","messageId":"274","endLine":6,"endColumn":60,"suggestions":"283"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":63,"nodeType":"273","messageId":"274","endLine":6,"endColumn":64,"suggestions":"284"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":79,"nodeType":"273","messageId":"274","endLine":6,"endColumn":80,"suggestions":"285"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":87,"nodeType":"273","messageId":"274","endLine":6,"endColumn":88,"suggestions":"286"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":104,"nodeType":"273","messageId":"274","endLine":6,"endColumn":105,"suggestions":"287"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":112,"nodeType":"273","messageId":"274","endLine":6,"endColumn":113,"suggestions":"288"},{"ruleId":"271","severity":1,"message":"272","line":6,"column":13,"nodeType":"273","messageId":"274","endLine":6,"endColumn":14,"suggestions":"289"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":17,"nodeType":"273","messageId":"274","endLine":6,"endColumn":18,"suggestions":"290"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":25,"nodeType":"273","messageId":"274","endLine":6,"endColumn":26,"suggestions":"291"},{"ruleId":"271","severity":1,"message":"272","line":6,"column":38,"nodeType":"273","messageId":"274","endLine":6,"endColumn":39,"suggestions":"292"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":42,"nodeType":"273","messageId":"274","endLine":6,"endColumn":43,"suggestions":"293"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":50,"nodeType":"273","messageId":"274","endLine":6,"endColumn":51,"suggestions":"294"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":59,"nodeType":"273","messageId":"274","endLine":6,"endColumn":60,"suggestions":"295"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":63,"nodeType":"273","messageId":"274","endLine":6,"endColumn":64,"suggestions":"296"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":79,"nodeType":"273","messageId":"274","endLine":6,"endColumn":80,"suggestions":"297"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":87,"nodeType":"273","messageId":"274","endLine":6,"endColumn":88,"suggestions":"298"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":104,"nodeType":"273","messageId":"274","endLine":6,"endColumn":105,"suggestions":"299"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":112,"nodeType":"273","messageId":"274","endLine":6,"endColumn":113,"suggestions":"300"},{"ruleId":"271","severity":1,"message":"272","line":6,"column":13,"nodeType":"273","messageId":"274","endLine":6,"endColumn":14,"suggestions":"301"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":17,"nodeType":"273","messageId":"274","endLine":6,"endColumn":18,"suggestions":"302"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":25,"nodeType":"273","messageId":"274","endLine":6,"endColumn":26,"suggestions":"303"},{"ruleId":"271","severity":1,"message":"272","line":6,"column":38,"nodeType":"273","messageId":"274","endLine":6,"endColumn":39,"suggestions":"304"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":42,"nodeType":"273","messageId":"274","endLine":6,"endColumn":43,"suggestions":"305"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":50,"nodeType":"273","messageId":"274","endLine":6,"endColumn":51,"suggestions":"306"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":59,"nodeType":"273","messageId":"274","endLine":6,"endColumn":60,"suggestions":"307"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":63,"nodeType":"273","messageId":"274","endLine":6,"endColumn":64,"suggestions":"308"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":79,"nodeType":"273","messageId":"274","endLine":6,"endColumn":80,"suggestions":"309"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":87,"nodeType":"273","messageId":"274","endLine":6,"endColumn":88,"suggestions":"310"},{"ruleId":"271","severity":1,"message":"276","line":6,"column":104,"nodeType":"273","messageId":"274","endLine":6,"endColumn":105,"suggestions":"311"},{"ruleId":"271","severity":1,"message":"278","line":6,"column":112,"nodeType":"273","messageId":"274","endLine":6,"endColumn":113,"suggestions":"312"},{"ruleId":"262","replacedBy":"313"},{"ruleId":"264","replacedBy":"314"},{"ruleId":"266","severity":1,"message":"267","line":130,"column":25,"nodeType":"268","endLine":130,"endColumn":69},{"ruleId":"315","severity":1,"message":"316","line":14,"column":6,"nodeType":"317","endLine":14,"endColumn":14,"suggestions":"318"},{"ruleId":"262","replacedBy":"319"},{"ruleId":"264","replacedBy":"320"},{"ruleId":"262","replacedBy":"321"},{"ruleId":"264","replacedBy":"322"},{"ruleId":"262","replacedBy":"323"},{"ruleId":"264","replacedBy":"324"},{"ruleId":"315","severity":1,"message":"316","line":14,"column":6,"nodeType":"317","endLine":14,"endColumn":14,"suggestions":"325"},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["326"],["327"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["328","329"],"Unnecessary escape character: \\..",["330","331"],"Unnecessary escape character: \\\".",["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],["358","359"],["360","361"],["362","363"],["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376","377"],["378","379"],["380","381"],["382","383"],["384","385"],["386","387"],["388","389"],["390","391"],["392","393"],["394","395"],["396","397"],["398","399"],["326"],["327"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["400"],["326"],["327"],["326"],["327"],["326"],["327"],["401"],"no-global-assign","no-unsafe-negation",{"messageId":"402","fix":"403","desc":"404"},{"messageId":"405","fix":"406","desc":"407"},{"messageId":"402","fix":"408","desc":"404"},{"messageId":"405","fix":"409","desc":"407"},{"messageId":"402","fix":"410","desc":"404"},{"messageId":"405","fix":"411","desc":"407"},{"messageId":"402","fix":"412","desc":"404"},{"messageId":"405","fix":"413","desc":"407"},{"messageId":"402","fix":"414","desc":"404"},{"messageId":"405","fix":"415","desc":"407"},{"messageId":"402","fix":"416","desc":"404"},{"messageId":"405","fix":"417","desc":"407"},{"messageId":"402","fix":"418","desc":"404"},{"messageId":"405","fix":"419","desc":"407"},{"messageId":"402","fix":"420","desc":"404"},{"messageId":"405","fix":"421","desc":"407"},{"messageId":"402","fix":"422","desc":"404"},{"messageId":"405","fix":"423","desc":"407"},{"messageId":"402","fix":"424","desc":"404"},{"messageId":"405","fix":"425","desc":"407"},{"messageId":"402","fix":"426","desc":"404"},{"messageId":"405","fix":"427","desc":"407"},{"messageId":"402","fix":"428","desc":"404"},{"messageId":"405","fix":"429","desc":"407"},{"messageId":"402","fix":"430","desc":"404"},{"messageId":"405","fix":"431","desc":"407"},{"messageId":"402","fix":"432","desc":"404"},{"messageId":"405","fix":"433","desc":"407"},{"messageId":"402","fix":"434","desc":"404"},{"messageId":"405","fix":"435","desc":"407"},{"messageId":"402","fix":"436","desc":"404"},{"messageId":"405","fix":"437","desc":"407"},{"messageId":"402","fix":"438","desc":"404"},{"messageId":"405","fix":"439","desc":"407"},{"messageId":"402","fix":"440","desc":"404"},{"messageId":"405","fix":"441","desc":"407"},{"messageId":"402","fix":"442","desc":"404"},{"messageId":"405","fix":"443","desc":"407"},{"messageId":"402","fix":"444","desc":"404"},{"messageId":"405","fix":"445","desc":"407"},{"messageId":"402","fix":"446","desc":"404"},{"messageId":"405","fix":"447","desc":"407"},{"messageId":"402","fix":"448","desc":"404"},{"messageId":"405","fix":"449","desc":"407"},{"messageId":"402","fix":"450","desc":"404"},{"messageId":"405","fix":"451","desc":"407"},{"messageId":"402","fix":"452","desc":"404"},{"messageId":"405","fix":"453","desc":"407"},{"messageId":"402","fix":"454","desc":"404"},{"messageId":"405","fix":"455","desc":"407"},{"messageId":"402","fix":"456","desc":"404"},{"messageId":"405","fix":"457","desc":"407"},{"messageId":"402","fix":"458","desc":"404"},{"messageId":"405","fix":"459","desc":"407"},{"messageId":"402","fix":"460","desc":"404"},{"messageId":"405","fix":"461","desc":"407"},{"messageId":"402","fix":"462","desc":"404"},{"messageId":"405","fix":"463","desc":"407"},{"messageId":"402","fix":"464","desc":"404"},{"messageId":"405","fix":"465","desc":"407"},{"messageId":"402","fix":"466","desc":"404"},{"messageId":"405","fix":"467","desc":"407"},{"messageId":"402","fix":"468","desc":"404"},{"messageId":"405","fix":"469","desc":"407"},{"messageId":"402","fix":"470","desc":"404"},{"messageId":"405","fix":"471","desc":"407"},{"messageId":"402","fix":"472","desc":"404"},{"messageId":"405","fix":"473","desc":"407"},{"messageId":"402","fix":"474","desc":"404"},{"messageId":"405","fix":"475","desc":"407"},{"messageId":"402","fix":"476","desc":"404"},{"messageId":"405","fix":"477","desc":"407"},{"desc":"478","fix":"479"},{"desc":"478","fix":"480"},"removeEscape",{"range":"481","text":"482"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"483","text":"484"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"485","text":"482"},{"range":"486","text":"484"},{"range":"487","text":"482"},{"range":"488","text":"484"},{"range":"489","text":"482"},{"range":"490","text":"484"},{"range":"491","text":"482"},{"range":"492","text":"484"},{"range":"493","text":"482"},{"range":"494","text":"484"},{"range":"495","text":"482"},{"range":"496","text":"484"},{"range":"497","text":"482"},{"range":"498","text":"484"},{"range":"499","text":"482"},{"range":"500","text":"484"},{"range":"501","text":"482"},{"range":"502","text":"484"},{"range":"503","text":"482"},{"range":"504","text":"484"},{"range":"505","text":"482"},{"range":"506","text":"484"},{"range":"507","text":"482"},{"range":"508","text":"484"},{"range":"509","text":"482"},{"range":"510","text":"484"},{"range":"511","text":"482"},{"range":"512","text":"484"},{"range":"513","text":"482"},{"range":"514","text":"484"},{"range":"515","text":"482"},{"range":"516","text":"484"},{"range":"517","text":"482"},{"range":"518","text":"484"},{"range":"519","text":"482"},{"range":"520","text":"484"},{"range":"521","text":"482"},{"range":"522","text":"484"},{"range":"523","text":"482"},{"range":"524","text":"484"},{"range":"525","text":"482"},{"range":"526","text":"484"},{"range":"527","text":"482"},{"range":"528","text":"484"},{"range":"529","text":"482"},{"range":"530","text":"484"},{"range":"531","text":"482"},{"range":"532","text":"484"},{"range":"533","text":"482"},{"range":"534","text":"484"},{"range":"535","text":"482"},{"range":"536","text":"484"},{"range":"537","text":"482"},{"range":"538","text":"484"},{"range":"539","text":"482"},{"range":"540","text":"484"},{"range":"541","text":"482"},{"range":"542","text":"484"},{"range":"543","text":"482"},{"range":"544","text":"484"},{"range":"545","text":"482"},{"range":"546","text":"484"},{"range":"547","text":"482"},{"range":"548","text":"484"},{"range":"549","text":"482"},{"range":"550","text":"484"},{"range":"551","text":"482"},{"range":"552","text":"484"},{"range":"553","text":"482"},{"range":"554","text":"484"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"555","text":"556"},{"range":"557","text":"556"},[113,114],"",[113,113],"\\",[117,118],[117,117],[125,126],[125,125],[138,139],[138,138],[142,143],[142,142],[150,151],[150,150],[159,160],[159,159],[163,164],[163,163],[179,180],[179,179],[187,188],[187,187],[204,205],[204,204],[212,213],[212,212],[113,114],[113,113],[117,118],[117,117],[125,126],[125,125],[138,139],[138,138],[142,143],[142,142],[150,151],[150,150],[159,160],[159,159],[163,164],[163,163],[179,180],[179,179],[187,188],[187,187],[204,205],[204,204],[212,213],[212,212],[113,114],[113,113],[117,118],[117,117],[125,126],[125,125],[138,139],[138,138],[142,143],[142,142],[150,151],[150,150],[159,160],[159,159],[163,164],[163,163],[179,180],[179,179],[187,188],[187,187],[204,205],[204,204],[212,213],[212,212],[347,355],"[callback, errors, isSubmitting]",[347,355]]